<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StellarFederationCommon</name>
    </assembly>
    <members>
        <member name="T:StellarFederationCommon.Extensions.FederationContentExtensions">
            <summary>
            FederationContentExtensions
            </summary>
        </member>
        <member name="T:StellarFederationCommon.Extensions.FederationContentTypes">
            <summary>
            Federation Content Type Names
            </summary>
        </member>
        <member name="F:StellarFederationCommon.Extensions.FederationContentTypes.RegularCoinType">
            <summary>
            Regular coin type name
            </summary>
        </member>
        <member name="F:StellarFederationCommon.Extensions.FederationContentTypes.CropItemType">
            <summary>
            Crop type name
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.CoinCurrency">
            <summary>
            Regular coin currency
            </summary>
        </member>
        <member name="M:StellarFederationCommon.FederationContent.CoinCurrency.#ctor">
            <summary>
            Default federation
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CoinCurrency.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CoinCurrency.Symbol">
            <summary>
            symbol
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CoinCurrency.Decimals">
            <summary>
            decimals
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CoinCurrency.Image">
            <summary>
            image
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CoinCurrency.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.CoinCurrencyRef">
            <summary>
            CoinCurrencyRef
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.CoinCurrencyLink">
            <summary>
            CoinCurrencyLink
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.CropItem">
            <summary>
            CropItem NFT
            </summary>
        </member>
        <member name="M:StellarFederationCommon.FederationContent.CropItem.#ctor">
            <summary>
            Default federation
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CropItem.Name">
            <summary>
            Token name
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CropItem.Description">
            <summary>
            Token description
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CropItem.Image">
            <summary>
            Token image
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.CropItem.CustomProperties">
            <summary>
            Token custom properties
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.CropItemRef">
            <summary>
            CropItemRef
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.CropItemLink">
            <summary>
            CropItemLink
            </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.IFtBase">
            <summary>
            All FT content types should implement this interface.
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.IFtBase.Name">
             <summary>
            
             </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.IFtBase.Symbol">
             <summary>
            
             </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.IFtBase.Decimals">
             <summary>
            
             </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.IFtBase.Image">
             <summary>
            
             </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.IFtBase.Description">
             <summary>
            
             </summary>
        </member>
        <member name="T:StellarFederationCommon.FederationContent.INftBase">
            <summary>
            All NFT content types should implement this interface.
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.INftBase.Name">
            <summary>
            Token name
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.INftBase.Image">
            <summary>
            Token description
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.INftBase.Description">
            <summary>
            Token image
            </summary>
        </member>
        <member name="P:StellarFederationCommon.FederationContent.INftBase.CustomProperties">
            <summary>
            Token custom properties
            </summary>
        </member>
        <member name="T:StellarFederationCommon.Models.Response.ConfigurationResponse">
            <summary>
            MS ConfigurationResponse
            </summary>
        </member>
        <member name="F:StellarFederationCommon.Models.Response.ConfigurationResponse.network">
            <summary>
            Current Stellar Network
            </summary>
        </member>
        <member name="F:StellarFederationCommon.Models.Response.ConfigurationResponse.walletConnectBridgeUrl">
            <summary>
            Wallet Connect Bridge URL
            </summary>
        </member>
        <member name="T:StellarFederationCommon.StellarWeb3Identity">
            <summary>
            SuiWeb3Identity definition
            </summary>
        </member>
        <member name="T:StellarFederationCommon.StellarWeb3ExternalIdentity">
            <summary>
            SuiWeb3ExternalIdentity definition
            </summary>
        </member>
        <member name="T:StellarFederationCommon.StellarFederationSettings">
            <summary>
            StellarFederationSettings class
            </summary>
        </member>
        <member name="F:StellarFederationCommon.StellarFederationSettings.MicroserviceName">
            <Summary>
             StellarFederation microservice name
            </Summary>
        </member>
        <member name="F:StellarFederationCommon.StellarFederationSettings.StellarIdentityName">
            <Summary>
             StellarFederationIdentity name
            </Summary>
        </member>
        <member name="F:StellarFederationCommon.StellarFederationSettings.StellarExternalIdentityName">
            <Summary>
             StellarFederationIdentity name
            </Summary>
        </member>
        <member name="T:StellarFederationCommon.StellarFederationCommonAssemblyIdentifier">
            <summary>
            Empty type used for StellarFederationCommon assembly load in the Federation service
            </summary>
        </member>
        <member name="T:SuiFederationCommon.Models.Notifications.ExternalAuthAddressNotification">
            <summary>
            ExternalAuthNotification
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.ExternalAuthAddressNotification.Context">
            <summary>
            Context
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.ExternalAuthAddressNotification.Value">
            <summary>
            Value of the transaction.
            </summary>
        </member>
        <member name="T:SuiFederationCommon.Models.Notifications.ExternalAuthSignatureNotification">
            <summary>
            ExternalAuthNotification
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.ExternalAuthSignatureNotification.Context">
            <summary>
            Context
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.ExternalAuthSignatureNotification.Value">
            <summary>
            Value of the transaction.
            </summary>
        </member>
        <member name="T:SuiFederationCommon.Models.Notifications.IPlayerNotification">
            <summary>
             Interface for player notifications.
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.IPlayerNotification.Context">
            <summary>
            Context of the notification, used to determine the type of notification.
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.IPlayerNotification.Value">
            <summary>
            Value of the notification, typically an identifier or relevant data.
            </summary>
        </member>
        <member name="T:SuiFederationCommon.Models.Notifications.NotificationConverter">
            <summary>
             Converts between JSON and IPlayerNotification types.
            </summary>
        </member>
        <member name="M:SuiFederationCommon.Models.Notifications.NotificationConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,SuiFederationCommon.Models.Notifications.IPlayerNotification,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads JSON and converts it to an IPlayerNotification object.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="hasExistingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:SuiFederationCommon.Models.Notifications.NotificationConverter.WriteJson(Newtonsoft.Json.JsonWriter,SuiFederationCommon.Models.Notifications.IPlayerNotification,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes an IPlayerNotification object as JSON.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.NotificationConverter.CanWrite">
            <summary>
            Checks if the converter can write JSON.
            </summary>
        </member>
        <member name="P:SuiFederationCommon.Models.Notifications.NotificationConverter.CanRead">
            <summary>
            Checks if the converter can read JSON.
            </summary>
        </member>
        <member name="T:SuiFederationCommon.Models.Notifications.PlayerNotificationContext">
            <summary>
            Represents the context for player notification subscriptions.
            </summary>
        </member>
        <member name="F:SuiFederationCommon.Models.Notifications.PlayerNotificationContext.ExternalAuthAddress">
            <summary>
            Context for external authentication address notifications.
            </summary>
        </member>
        <member name="F:SuiFederationCommon.Models.Notifications.PlayerNotificationContext.ExternalAuthSignature">
            <summary>
            Context for external authentication signature notifications.
            </summary>
        </member>
    </members>
</doc>
