//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.StellarFederation.StellarFederation"/> </summary
    public sealed class StellarFederationClient : MicroserviceClient, Beamable.Common.IHaveServiceName, Beamable.Common.ISupportsFederatedInventory<StellarFederationCommon.StellarWeb3Identity>, Beamable.Common.ISupportsFederatedLogin<StellarFederationCommon.StellarWeb3Identity>, Beamable.Common.ISupportsFederatedInventory<StellarFederationCommon.StellarWeb3ExternalIdentity>, Beamable.Common.ISupportsFederatedLogin<StellarFederationCommon.StellarWeb3ExternalIdentity>
    {
        
        public StellarFederationClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public StellarFederationClient(Beamable.Common.Dependencies.IDependencyProvider provider) : 
                base(provider)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "StellarFederation";
            }
        }
        
        /// <summary>
        /// Call the GetRealmAccount method on the StellarFederation microservice
        /// <see cref="Beamable.StellarFederation.StellarFederation.GetRealmAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> GetRealmAccount()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("StellarFederation", "GetRealmAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the GenerateRealmAccount method on the StellarFederation microservice
        /// <see cref="Beamable.StellarFederation.StellarFederation.GenerateRealmAccount"/>
        /// </summary>
        public Beamable.Common.Promise<string> GenerateRealmAccount()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<string>("StellarFederation", "GenerateRealmAccount", serializedFields);
        }
        
        /// <summary>
        /// Call the StellarConfiguration method on the StellarFederation microservice
        /// <see cref="Beamable.StellarFederation.StellarFederation.StellarConfiguration"/>
        /// </summary>
        public Beamable.Common.Promise<StellarFederationCommon.Models.Response.ConfigurationResponse> StellarConfiguration()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<StellarFederationCommon.Models.Response.ConfigurationResponse>("StellarFederation", "StellarConfiguration", serializedFields);
        }
        
        /// <summary>
        /// Call the ExternalAddress method on the StellarFederation microservice
        /// <see cref="Beamable.StellarFederation.StellarFederation.ExternalAddress"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Unit> ExternalAddress()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<Beamable.Common.Unit>("StellarFederation", "ExternalAddress", serializedFields);
        }
        
        /// <summary>
        /// Call the ExternalSignature method on the StellarFederation microservice
        /// <see cref="Beamable.StellarFederation.StellarFederation.ExternalSignature"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Unit> ExternalSignature()
        {
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            return this.Request<Beamable.Common.Unit>("StellarFederation", "ExternalSignature", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersStellarFederationClient
    {
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForStellarFederationClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute(50, Beamable.Common.Dependencies.RegistrationOrigin.EDITOR | Beamable.Common.Dependencies.RegistrationOrigin.RUNTIME)]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            System.Func<Beamable.Common.Dependencies.IDependencyProvider, StellarFederationClient> factory = p => new StellarFederationClient(p);
            builder.AddScoped<StellarFederationClient>(factory);
        }
        
        public static StellarFederationClient StellarFederation(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<StellarFederationClient>();
        }
    }
}
